service: csv-table-migration

package:
  individually: true

provider:
  name: aws
  runtime: python3.8
  region: us-east-2
  stage: ${opt:stage, "dev"}
  profile: giodragon
  memorySize: 128
  timeout: 30
  environment:
    S3_BUCKET: poc-gio
    S3_PATH: historic-upload
    TMP_FOLDER: /tmp/
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
          Resource: "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/${self:provider.environment.S3_PATH}*"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer:
      name: csv-table-migration
      description: CSV Table Migration
      compatibleRuntimes:
        - python3.8

functions:
  app:
    package:
      patterns:
        - "app/**"
        - "!requirements.txt"
        - "!package.json"
        - "!package-lock.json"
        - "!.gitignore"
        - "!.pre-commit-config.yaml"
        - "!.pylintrc"
        - "!.serverless/**"
        - "!node_modules/**"
        - "!ve/**"

    handler: app.main.handler
    environment:
        STAGE: ${self:provider.stage}
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    events:
      - http:
          method: any
          path: /{proxy+}
          cors: true
